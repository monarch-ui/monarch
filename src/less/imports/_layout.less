#layout{

  .grid(@gutter:0.75rem){
    #flex > .row();
    #flex > .wrap();
    align-items: stretch; // equal height columns
    align-content: flex-start;
    margin: 0 @gutter * -0.5;
    > *,[class*='column']{
      padding: 0 @gutter * 0.5;
      margin-bottom: @gutter;
      &:last-child{
        margin-bottom: 0;
      }
    }
  }

  .stack(@gutter:0.75rem){
    margin: @gutter * -0.5 0;
    > *,[class*='column']{
      width: 100%;
      padding: @gutter * 0.5 0;
      margin-bottom: 0;
    }
  }

  .column(@span:12, @gutter:0.75rem){
    //-webkit-flex-grow: 1;
    //flex-grow: 1;
    width : percentage(@span / 12);
  }

  .horizontal(@margin:0.75rem,@justify:flex-start){
    #flex > .row();
    #flex > .wrap(wrap);
    #flex > .justify(@justify);
    > *{
      #reset > ._(margin-top);
      #reset > ._(margin-bottom);
      margin-left: @margin / 2;
      margin-right: @margin / 2;
      &:first-child{
        margin-left: 0;
      }
      &:last-child{
        margin-right: 0;
      }
    }
  }

  .vertical(@margin:0.75rem){
    #flex > .column();
    #flex > .wrap(wrap);
    > *{
      #reset > ._(margin-right);
      #reset > ._(margin-left);
      margin-top: @margin / 2;
      margin-bottom: @margin / 2;
      &:first-child{
        margin-top: 0;
      }
      &:last-child{
        margin-bottom: 0;
      }
    }
  }

  .generateColumns(@columns:12,@gutter:0.75rem) when (@columns > 0) {
    .generateColumns((@columns - 1),@gutter);
    .column-@{columns}{
      .column(@columns,@gutter);
    }
  }

}



  